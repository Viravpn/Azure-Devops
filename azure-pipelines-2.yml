# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  virrg: 'virDevops'
  virstrg: 'virterraformst'
  vircaontainer: 'adanitstate'
  virkey: 'virterraformst'

stages:
  - stage: ifvalidate
    jobs:
      - job: validate
        continueOnError: false
        steps:
          - task: TerraformInstaller@1
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            displayName: init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'myservice'
              backendAzureRmResourceGroupName: '$(virrg)'
              backendAzureRmStorageAccountName: '$(virstrg)'
              backendAzureRmContainerName: '$(vircaontainer)'
              backendAzureRmKey: '$(virkey)'
          - task: TerraformTaskV4@4
            displayName: validate
            inputs:
              provider: 'azurerm'
              command: 'validate'
  - stage: ifdeploy
    condition: succeeded('tfvalidate')
    dependsOn: tfvalidate
    jobs:
      - job: apply
        steps:
          - task: TerraformInstaller@1
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            displayName: init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'myservice'
              backendAzureRmResourceGroupName: '$(virrg)'
              backendAzureRmStorageAccountName: '$(virstrg)'
              backendAzureRmContainerName: '$(vircaontainer)'
              backendAzureRmKey: '$(virkey)'
          - task: TerraformTaskV4@4
            displayName: plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'myservice'
          - task: TerraformTaskV4@4
            displayName: apply
            inputs:
              provider: 'azurerm'
              command: 'apply'
              environmentServiceNameAzureRM: 'myservice'